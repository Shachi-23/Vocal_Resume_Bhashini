"use client"

import { useState, useEffect } from "react"
import { Button } from "@/components/ui/button"
import { useRouter } from "next/navigation"
import { Volume2, VolumeX } from "lucide-react"
import { ModeSelectionModal } from "./mode-selection-modal"

// Profession data with translations
const professions = [
  {
    id: "driver",
    icon: "ЁЯЪЧ",
    subcategories: ["Car", "Truck", "Auto-rickshaw", "Delivery Van"],
    translations: {
      en: { name: "Driver", subcategories: ["Car", "Truck", "Auto-rickshaw", "Delivery Van"] },
      hi: { name: "рдбреНрд░рд╛рдЗрд╡рд░", subcategories: ["рдХрд╛рд░", "рдЯреНрд░рдХ", "рдСрдЯреЛ-рд░рд┐рдХреНрд╢рд╛", "рдбрд┐рд▓реАрд╡рд░реА рд╡реИрди"] },
      bn: { name: "ржЪрж╛рж▓ржХ", subcategories: ["ржЧрж╛ржбрж╝рж┐", "ржЯрзНрж░рж╛ржХ", "ржЕржЯрзЛ-рж░рж┐ржХрзНрж╖рж╛", "ржбрзЗрж▓рж┐ржнрж╛рж░рж┐ ржнрзНржпрж╛ржи"] },
      te: { name: "р░бр▒Нр░░р▒Ир░╡р░░р▒Н", subcategories: ["р░Хр░╛р░░р▒Н", "р░Яр▒Нр░░р░Хр▒Н", "р░Жр░Яр▒Л-р░░р░┐р░Хр▒Нр░╖р░╛", "р░бр▒Жр░▓р░┐р░╡р░░р░┐ р░╡р▒Нр░пр░╛р░ир▒Н"] },
      ta: { name: "роУроЯрпНроЯрпБроиро░рпН", subcategories: ["роХро╛ро░рпН", "роЯро┐ро░роХрпН", "роЖроЯрпНроЯрпЛ-ро░ро┐роХрпНро╖ро╛", "роЯрпЖро▓ро┐ро╡ро░ро┐ ро╡рпЗройрпН"] },
      mr: { name: "рдЪрд╛рд▓рдХ", subcategories: ["рдХрд╛рд░", "рдЯреНрд░рдХ", "рдСрдЯреЛ-рд░рд┐рдХреНрд╖рд╛", "рдбрд┐рд▓рд┐рд╡реНрд╣рд░реА рд╡реНрд╣реЕрди"] },
      gu: { name: "ркбрлНрк░рк╛ркЗрк╡рк░", subcategories: ["ркХрк╛рк░", "ркЯрлНрк░ркХ", "ркУркЯрлЛ-рк░рк┐ркХрлНрк╖рк╛", "ркбрк┐рк▓рк┐рк╡рк░рлА рк╡рлЗрки"] },
      kn: { name: "р▓Ър▓╛р▓▓р▓Х", subcategories: ["р▓Хр▓╛р▓░р│Н", "р▓Яр│Нр▓░р▓Хр│Н", "р▓Жр▓Яр│Л-р▓░р▓┐р▓Хр│Нр▓╖р▓╛", "р▓бр│Жр▓▓р▓┐р▓╡р▓░р▓┐ р▓╡р│Нр▓пр▓╛р▓ир│Н"] },
      ml: { name: "р┤бр╡Нр┤░р╡Ир┤╡р╡╝", subcategories: ["р┤Хр┤╛р╡╝", "р┤Яр╡Нр┤░р┤Хр╡Нр┤Хр╡Н", "р┤Ур┤Яр╡Нр┤Яр╡Л-р┤▒р┤┐р┤Хр╡Нр┤╖", "р┤бр╡Жр┤▓р┤┐р┤╡р┤▒р┤┐ р┤╡р┤╛р╡╗"] },
      pa: { name: "рибри░ри╛риИри╡ри░", subcategories: ["риХри╛ри░", "риЯри░рй▒риХ", "риЖриЯрйЛ-ри░ри┐риХри╕ри╝ри╛", "рибри┐ри▓рйАри╡ри░рйА ри╡рйИрии"] },
      or: { name: "рмбрнНрм░рм╛рмЗрмнрм░", subcategories: ["рмХрм╛рм░", "рмЯрнНрм░рмХ", "рмЕрмЯрнЛ-рм░рм┐рмХрнНрм╕рм╛", "рмбрнЗрм▓рм┐рмнрм░рнА рмнрнНрнЯрм╛рми"] },
      as: { name: "ржЪрж╛рж▓ржХ", subcategories: ["ржЧрж╛ржбрж╝рзА", "ржЯрзНрз░рж╛ржХ", "ржЕржЯрзЛ-рз░рж┐ржХрзНрж╕рж╛", "ржбрзЗрж▓рж┐ржнрж╛рз░рзА ржнрзЗржи"] },
      ur: { name: "┌И╪▒╪з╪ж█М┘И╪▒", subcategories: ["┌й╪з╪▒", "┘╣╪▒┌й", "╪в┘╣┘И ╪▒┌й╪┤█Б", "┌И█М┘Д█М┘И╪▒█М ┘И█М┘Ж"] },
    },
  },
  {
    id: "delivery",
    icon: "ЁЯЫ╡",
    subcategories: ["Food Delivery", "Courier"],
    translations: {
      en: { name: "Delivery Partner", subcategories: ["Food Delivery", "Courier"] },
      hi: { name: "рдбрд┐рд▓реАрд╡рд░реА рдкрд╛рд░реНрдЯрдирд░", subcategories: ["рдЦрд╛рдирд╛ рдбрд┐рд▓реАрд╡рд░реА", "рдХреВрд░рд┐рдпрд░"] },
      bn: { name: "ржбрзЗрж▓рж┐ржнрж╛рж░рж┐ ржкрж╛рж░рзНржЯржирж╛рж░", subcategories: ["ржЦрж╛ржмрж╛рж░ ржбрзЗрж▓рж┐ржнрж╛рж░рж┐", "ржХрзБрж░рж┐ржпрж╝рж╛рж░"] },
      te: { name: "р░бр▒Жр░▓р░┐р░╡р░░р▒А р░кр░╛р░░р▒Нр░Яр░ир░░р▒Н", subcategories: ["р░лр▒Бр░бр▒Н р░бр▒Жр░▓р░┐р░╡р░░р▒А", "р░Хр▒Кр░░р░┐р░пр░░р▒Н"] },
      ta: { name: "роЯрпЖро▓ро┐ро╡ро░ро┐ рокро╛ро░рпНроЯрпНройро░рпН", subcategories: ["роЙрогро╡рпБ роЯрпЖро▓ро┐ро╡ро░ро┐", "роХрпВро░ро┐ропро░рпН"] },
      mr: { name: "рдбрд┐рд▓рд┐рд╡реНрд╣рд░реА рдкрд╛рд░реНрдЯрдирд░", subcategories: ["рдЕрдиреНрди рдбрд┐рд▓рд┐рд╡реНрд╣рд░реА", "рдХреБрд░рд┐рдЕрд░"] },
      gu: { name: "ркбрк┐рк▓рк┐рк╡рк░рлА рккрк╛рк░рлНркЯркирк░", subcategories: ["рклрлВркб ркбрк┐рк▓рк┐рк╡рк░рлА", "ркХрлБрк░рк┐ркпрк░"] },
      kn: { name: "р▓бр│Жр▓▓р▓┐р▓╡р▓░р▓┐ р▓кр▓╛р▓░р│Нр▓Яр│Нр▓ир▓░р│Н", subcategories: ["р▓лр│Бр▓бр│Н р▓бр│Жр▓▓р▓┐р▓╡р▓░р▓┐", "р▓Хр│Кр▓░р▓┐р▓пр▓░р│Н"] },
      ml: { name: "р┤бр╡Жр┤▓р┤┐р┤╡р┤▒р┤┐ р┤кр┤╛р╡╝р┤Яр╡Нр┤гр╡╝", subcategories: ["р┤лр╡Бр┤бр╡Н р┤бр╡Жр┤▓р┤┐р┤╡р┤▒р┤┐", "р┤Хр╡Кр┤▒р┤┐р┤пр╡╝"] },
      pa: { name: "рибри┐ри▓рйАри╡ри░рйА рикри╛ри░риЯриири░", subcategories: ["рилрйВриб рибри┐ри▓рйАри╡ри░рйА", "риХрйБри░рйАриЕри░"] },
      or: { name: "рмбрнЗрм▓рм┐рмнрм░рнА рмкрм╛рм░рнНрмЯрмирм░", subcategories: ["рмЦрм╛рмжрнНрнЯ рмбрнЗрм▓рм┐рмнрм░рнА", "рмХрнБрм░рм┐рмЕрм░"] },
      as: { name: "ржбрзЗрж▓рж┐ржнрж╛рз░рзА ржкрж╛рз░рзНржЯржирж╛рз░", subcategories: ["ржЦрж╛ржжрзНржп ржбрзЗрж▓рж┐ржнрж╛рз░рзА", "ржХрзБрз░рж┐ржпрж╝рж╛рз░"] },
      ur: { name: "┌И█М┘Д█М┘И╪▒█М ┘╛╪з╪▒┘╣┘Ж╪▒", subcategories: ["┘Б┘И┌И ┌И█М┘Д█М┘И╪▒█М", "┌й┘И╪▒█М╪ж╪▒"] },
    },
  },
  {
    id: "electrician",
    icon: "тЪб",
    subcategories: ["Home Electrician", "Industrial"],
    translations: {
      en: { name: "Electrician", subcategories: ["Home Electrician", "Industrial"] },
      hi: { name: "рдЗрд▓реЗрдХреНрдЯреНрд░реАрд╢рд┐рдпрди", subcategories: ["рдШрд░реЗрд▓реВ рдЗрд▓реЗрдХреНрдЯреНрд░реАрд╢рд┐рдпрди", "рдФрджреНрдпреЛрдЧрд┐рдХ"] },
      bn: { name: "ржЗрж▓рзЗржХржЯрзНрж░рж┐рж╢рж┐ржпрж╝рж╛ржи", subcategories: ["ржмрж╛ржбрж╝рж┐рж░ ржЗрж▓рзЗржХржЯрзНрж░рж┐рж╢рж┐ржпрж╝рж╛ржи", "рж╢рж┐рж▓рзНржк"] },
      te: { name: "р░Ор░▓р░Хр▒Нр░Яр▒Нр░░р▒Ар░╖р░┐р░пр░ир▒Н", subcategories: ["р░╣р▒Лржор▒Н р░Ор░▓р░Хр▒Нр░Яр▒Нр░░р▒Ар░╖р░┐р░пр░ир▒Н", "р░Зр░Вр░бр░╕р▒Нр░Яр▒Нр░░р░┐р░пр░▓р▒Н"] },
      ta: { name: "рооро┐ройрпНроЪро╛ро░родрпН родрпКро┤ро┐ро▓ро╛ро│ро┐", subcategories: ["ро╡рпАроЯрпНроЯрпБ рооро┐ройрпНроЪро╛ро░роорпН", "родрпКро┤ро┐ро▓рпНродрпБро▒рпИ"] },
      mr: { name: "рдЗрд▓реЗрдХреНрдЯреНрд░рд┐рд╢рд┐рдпрди", subcategories: ["рдШрд░рдЧреБрддреА рдЗрд▓реЗрдХреНрдЯреНрд░рд┐рд╢рд┐рдпрди", "рдФрджреНрдпреЛрдЧрд┐рдХ"] },
      gu: { name: "ркЗрк▓рлЗркХрлНркЯрлНрк░рк┐рк╢рк┐ркпрки", subcategories: ["ркШрк░рлЗрк▓рлБркВ ркЗрк▓рлЗркХрлНркЯрлНрк░рк┐рк╢рк┐ркпрки", "ркФркжрлНркпрлЛркЧрк┐ркХ"] },
      kn: { name: "р▓Ор▓▓р│Жр▓Хр│Нр▓Яр│Нр▓░р▓┐р▓╖р▓┐р▓пр▓ир│Н", subcategories: ["р▓ор▓ир│Ж р▓Ор▓▓р│Жр▓Хр│Нр▓Яр│Нр▓░р▓┐р▓╖р▓┐р▓пр▓ир│Н", "р▓Хр│Ир▓Чр▓╛р▓░р▓┐р▓Хр▓╛"] },
      ml: { name: "р┤Зр┤▓р┤Хр╡Нр┤Яр╡Нр┤░р╡Ар┤╖р╡Нр┤пр╡╗", subcategories: ["р┤╣р╡Лр┤В р┤Зр┤▓р┤Хр╡Нр┤Яр╡Нр┤░р╡Ар┤╖р╡Нр┤пр╡╗", "р┤Зр╡╗р┤бр┤╕р╡Нр┤Яр╡Нр┤░р┤┐р┤пр╡╜"] },
      pa: { name: "риЗри▓рйИриХриЯрйНри░рйАри╕ри╝ри┐риЕрии", subcategories: ["риШри░рйЗри▓рйВ риЗри▓рйИриХриЯрйНри░рйАри╕ри╝ри┐риЕрии", "риЙрижрипрйЛриЧри┐риХ"] },
      or: { name: "рмЗрм▓рнЗрмХрнНрмЯрнНрм░рм┐рм╕рм┐рмЖрми", subcategories: ["рмШрм░ рмЗрм▓рнЗрмХрнНрмЯрнНрм░рм┐рм╕рм┐рмЖрми", "рм╢рм┐рм▓рнНрмк"] },
      as: { name: "ржЗрж▓рзЗржХржЯрзНрз░рж┐ржЪрж┐ржпрж╝рж╛ржи", subcategories: ["ржШрз░рзБрз▒рж╛ ржЗрж▓рзЗржХржЯрзНрз░рж┐ржЪрж┐ржпрж╝рж╛ржи", "ржФржжрзНржпрзЛржЧрж┐ржХ"] },
      ur: { name: "╪з┘Д█М┌й┘╣╪▒█М╪┤┘Ж", subcategories: ["┌п┌╛╪▒█М┘Д┘И ╪з┘Д█М┌й┘╣╪▒█М╪┤┘Ж", "╪╡┘Ж╪╣╪к█М"] },
    },
  },
  {
    id: "tailor",
    icon: "тЬВя╕П",
    subcategories: ["Clothing Tailor", "Alteration"],
    translations: {
      en: { name: "Tailor", subcategories: ["Clothing Tailor", "Alteration"] },
      hi: { name: "рджрд░реНрдЬреА", subcategories: ["рдХрдкрдбрд╝реЗ рдХрд╛ рджрд░реНрдЬреА", "рд╕реБрдзрд╛рд░"] },
      bn: { name: "ржжрж░рзНржЬрж┐", subcategories: ["ржкрзЛрж╢рж╛ржХ ржжрж░рзНржЬрж┐", "ржкрж░рж┐ржмрж░рзНрждржи"] },
      te: { name: "р░жр░░р▒Нр░Ьр▒А", subcategories: ["р░жр▒Бр░╕р▒Нр░др▒Бр░▓ р░жр░░р▒Нр░Ьр▒А", "р░ор░╛р░░р▒Нр░кр▒Б"] },
      ta: { name: "родрпИропро▓рпНроХро╛ро░ро░рпН", subcategories: ["роЖроЯрпИ родрпИропро▓рпН", "рооро╛ро▒рпНро▒роорпН"] },
      mr: { name: "рд╢рд┐рдВрдкреА", subcategories: ["рдХрдкрдбреНрдпрд╛рдВрдЪрд╛ рд╢рд┐рдВрдкреА", "рджреБрд░реБрд╕реНрддреА"] },
      gu: { name: "ркжрк░ркЬрлА", subcategories: ["ркХрккркбрк╛ркВркирлЛ ркжрк░ркЬрлА", "рклрлЗрк░рклрк╛рк░"] },
      kn: { name: "р▓Яр│Зр▓▓р▓░р│Н", subcategories: ["р▓мр▓Яр│Нр▓Яр│Ж р▓Яр│Зр▓▓р▓░р│Н", "р▓мр▓жр▓▓р▓╛р▓╡р▓гр│Ж"] },
      ml: { name: "р┤др┤пр╡Нр┤пр╡╜р┤Хр╡Нр┤Хр┤╛р┤░р╡╗", subcategories: ["р┤╡р┤╕р╡Нр┤др╡Нр┤░ р┤др┤пр╡Нр┤пр╡╜", "р┤ор┤╛р┤▒р╡Нр┤▒р┤В"] },
      pa: { name: "рижри░риЬри╝рйА", subcategories: ["риХрй▒рикрйЬрйЗ рижри╛ рижри░риЬри╝рйА", "ри╕рйБризри╛ри░"] },
      or: { name: "рмжрм░рнНрмЬрм┐", subcategories: ["рмкрнЛрм╖рм╛рмХ рмжрм░рнНрмЬрм┐", "рмкрм░рм┐рммрм░рнНрмдрнНрмдрми"] },
      as: { name: "ржжрз░рзНржЬрзА", subcategories: ["ржХрж╛ржкрзЛрз░рз░ ржжрз░рзНржЬрзА", "рж╕рж▓ржирж┐"] },
      ur: { name: "╪п╪▒╪▓█М", subcategories: ["┌й┘╛┌С█Т ┌й╪з ╪п╪▒╪▓█М", "╪к╪и╪п█М┘Д█М"] },
    },
  },
  {
    id: "cook",
    icon: "ЁЯСитАНЁЯН│",
    subcategories: ["Home Cook", "Restaurant Cook"],
    translations: {
      en: { name: "Cook / Chef", subcategories: ["Home Cook", "Restaurant Cook"] },
      hi: { name: "рд░рд╕реЛрдЗрдпрд╛ / рд╢реЗрдл", subcategories: ["рдШрд░реЗрд▓реВ рд░рд╕реЛрдЗрдпрд╛", "рд░реЗрд╕реНрдЯреЛрд░реЗрдВрдЯ рд░рд╕реЛрдЗрдпрд╛"] },
      bn: { name: "рж░рж╛ржБржзрзБржирж┐ / рж╢рзЗржл", subcategories: ["ржмрж╛ржбрж╝рж┐рж░ рж░рж╛ржБржзрзБржирж┐", "рж░рзЗрж╕рзНрждрзЛрж░рж╛ржБрж░ рж░рж╛ржБржзрзБржирж┐"] },
      te: { name: "р░╡р░Вр░Яр░╡р░╛р░бр▒Б / р░Ър▒Жр░лр▒Н", subcategories: ["р░Зр░Вр░Яр░┐ р░╡р░Вр░Яр░╡р░╛р░бр▒Б", "р░░р▒Жр░╕р▒Нр░Яр░╛р░░р▒Жр░Вр░Яр▒Н р░╡р░Вр░Яр░╡р░╛р░бр▒Б"] },
      ta: { name: "роЪроорпИропро▓рпНроХро╛ро░ро░рпН / роЪрпЖроГрокрпН", subcategories: ["ро╡рпАроЯрпНроЯрпБ роЪроорпИропро▓рпН", "роЙрогро╡роХроорпН"] },
      mr: { name: "рд╕реНрд╡рдпрдВрдкрд╛рдХреА / рд╢реЗрдл", subcategories: ["рдШрд░рдЧреБрддреА рд╕реНрд╡рдпрдВрдкрд╛рдХреА", "рд░реЗрд╕реНрдЯреЙрд░рдВрдЯ рд╕реНрд╡рдпрдВрдкрд╛рдХреА"] },
      gu: { name: "рк░рк╕рлЛркЗркпрлЛ / рк╢рлЗркл", subcategories: ["ркШрк░рлЗрк▓рлБркВ рк░рк╕рлЛркЗркпрлЛ", "рк░рлЗрк╕рлНркЯрлЛрк░ркирлНркЯ рк░рк╕рлЛркЗркпрлЛ"] },
      kn: { name: "р▓Ер▓бр│Бр▓Чр│Жр▓пр▓╡р▓░р│Б / р▓╢р│Жр▓лр│Н", subcategories: ["р▓ор▓ир│Ж р▓Ер▓бр│Бр▓Чр│Ж", "р▓░р│Жр▓╕р│Нр▓Яр│Лр▓░р│Жр▓Вр▓Яр│Н р▓Ер▓бр│Бр▓Чр│Ж"] },
      ml: { name: "р┤кр┤╛р┤Ър┤Хр┤Хр╡Нр┤Хр┤╛р┤░р╡╗ / р┤╖р╡Жр┤лр╡Н", subcategories: ["р┤╡р╡Ар┤Яр╡Нр┤Яр┤┐р┤▓р╡Ж р┤кр┤╛р┤Ър┤Хр┤В", "р┤▒р╡Жр┤╕р╡Нр┤▒р╡Нр┤▒р╡Лр┤▒р┤ир╡Нр┤▒р╡Н р┤кр┤╛р┤Ър┤Хр┤В"] },
      pa: { name: "ри░ри╕рйЛриИриЖ / ри╕ри╝рйИрй▒рил", subcategories: ["риШри░рйЗри▓рйВ ри░ри╕рйЛриИриЖ", "ри░рйИри╕риЯрйЛри░рйИриВриЯ ри░ри╕рйЛриИриЖ"] },
      or: { name: "рм░рм╛рмирнНрмзрнБрмгрнА / рм╢рнЗрмл", subcategories: ["рмШрм░ рм░рм╛рмирнНрмзрнБрмгрнА", "рм░рнЗрм╖рнНрмЯрнБрм░рм╛рмгрнНрмЯ рм░рм╛рмирнНрмзрнБрмгрнА"] },
      as: { name: "рз░рж╛ржирзНржзржирзА / рж╢рзНржмрзЗржл", subcategories: ["ржШрз░рзБрз▒рж╛ рз░рж╛ржирзНржзржирзА", "рз░рзЗрж╖рзНржЯрзБрз░рзЗржгрзНржЯ рз░рж╛ржирзНржзржирзА"] },
      ur: { name: "╪и╪з┘И╪▒┌Ж█М / ╪┤█М┘Б", subcategories: ["┌п┌╛╪▒█М┘Д┘И ╪и╪з┘И╪▒┌Ж█М", "╪▒█М╪│┘╣┘И╪▒┘Ж┘╣ ╪и╪з┘И╪▒┌Ж█М"] },
    },
  },
  {
    id: "security",
    icon: "ЁЯЫбя╕П",
    subcategories: ["Building Security", "Event Security"],
    translations: {
      en: { name: "Security Guard", subcategories: ["Building Security", "Event Security"] },
      hi: { name: "рд╕рд┐рдХреНрдпреЛрд░рд┐рдЯреА рдЧрд╛рд░реНрдб", subcategories: ["рдмрд┐рд▓реНрдбрд┐рдВрдЧ рд╕рд┐рдХреНрдпреЛрд░рд┐рдЯреА", "рдЗрд╡реЗрдВрдЯ рд╕рд┐рдХреНрдпреЛрд░рд┐рдЯреА"] },
      bn: { name: "ржирж┐рж░рж╛ржкрждрзНрждрж╛ ржкрзНрж░рж╣рж░рзА", subcategories: ["ржмрж┐рж▓рзНржбрж┐ржВ ржирж┐рж░рж╛ржкрждрзНрждрж╛", "ржЗржнрзЗржирзНржЯ ржирж┐рж░рж╛ржкрждрзНрждрж╛"] },
      te: { name: "р░╕р▒Жр░Хр▒Нр░пр▒Вр░░р░┐р░Яр▒А р░Чр░╛р░░р▒Нр░бр▒Н", subcategories: ["р░мр░┐р░▓р▒Нр░бр░┐р░Вр░Чр▒Н р░╕р▒Жр░Хр▒Нр░пр▒Вр░░р░┐р░Яр▒А", "р░Ир░╡р▒Жр░Вр░Яр▒Н р░╕р▒Жр░Хр▒Нр░пр▒Вр░░р░┐р░Яр▒А"] },
      ta: { name: "рокро╛родрпБроХро╛рокрпНрокрпБ роХро╛ро╡ро▓ро░рпН", subcategories: ["роХроЯрпНроЯро┐роЯ рокро╛родрпБроХро╛рокрпНрокрпБ", "роиро┐роХро┤рпНро╡рпБ рокро╛родрпБроХро╛рокрпНрокрпБ"] },
      mr: { name: "рд╕рд┐рдХреНрдпреБрд░рд┐рдЯреА рдЧрд╛рд░реНрдб", subcategories: ["рдмрд┐рд▓реНрдбрд┐рдВрдЧ рд╕рд┐рдХреНрдпреБрд░рд┐рдЯреА", "рдЗрд╡реНрд╣реЗрдВрдЯ рд╕рд┐рдХреНрдпреБрд░рд┐рдЯреА"] },
      gu: { name: "рк╕рк┐ркХрлНркпрлБрк░рк┐ркЯрлА ркЧрк╛рк░рлНркб", subcategories: ["ркмрк┐рк▓рлНркбрк┐ркВркЧ рк╕рк┐ркХрлНркпрлБрк░рк┐ркЯрлА", "ркЗрк╡рлЗркирлНркЯ рк╕рк┐ркХрлНркпрлБрк░рк┐ркЯрлА"] },
      kn: { name: "р▓╕р│Жр▓Хр│Нр▓пр│Бр▓░р▓┐р▓Яр▓┐ р▓Чр▓╛р▓░р│Нр▓бр│Н", subcategories: ["р▓Хр▓Яр│Нр▓Яр▓б р▓нр▓жр│Нр▓░р▓др│Ж", "р▓Ир▓╡р│Жр▓Вр▓Яр│Н р▓нр▓жр│Нр▓░р▓др│Ж"] },
      ml: { name: "р┤╕р╡Жр┤Хр╡Нр┤пр╡Врк░р┤┐р┤▒р╡Нр┤▒р┤┐ р┤Чр┤╛р╡╝р┤бр╡Н", subcategories: ["р┤мр┤┐р╡╜р┤бр┤┐р┤Вр┤Чр╡Н р┤╕р╡Жр┤Хр╡Нр┤пр╡Вр┤░р┤┐р┤▒р╡Нр┤▒р┤┐", "р┤Зр┤╡р┤ир╡Нр┤▒р╡Н р┤╕р╡Жр┤Хр╡Нр┤пр╡Вр┤░р┤┐р┤▒р╡Нр┤▒р┤┐"] },
      pa: { name: "ри╕ри┐риХри┐риЙри░ри┐риЯрйА риЧри╛ри░риб", subcategories: ["римри┐ри▓рибри┐рй░риЧ ри╕ри┐риХри┐риЙри░ри┐риЯрйА", "риЗри╡рйИриВриЯ ри╕ри┐риХри┐риЙри░ри┐риЯрйА"] },
      or: { name: "рм╕рм┐рмХрнНрнЯрнБрм░рм┐рмЯрм┐ рмЧрм╛рм░рнНрмб", subcategories: ["рммрм┐рм▓рмбрм┐рмВ рм╕рм┐рмХрнНрнЯрнБрм░рм┐рмЯрм┐", "рмЗрмнрнЗрмгрнНрмЯ рм╕рм┐рмХрнНрнЯрнБрм░рм┐рмЯрм┐"] },
      as: { name: "ржирж┐рз░рж╛ржкрждрзНрждрж╛ ржкрзНрз░рж╣рз░рзА", subcategories: ["ржмрж┐рж▓рзНржбрж┐ржВ ржирж┐рз░рж╛ржкрждрзНрждрж╛", "ржЗржнрзЗржгрзНржЯ ржирж┐рз░рж╛ржкрждрзНрждрж╛"] },
      ur: { name: "╪│█М┌й█М┘И╪▒┘╣█М ┌п╪з╪▒┌И", subcategories: ["╪и┘Д┌И┘Ж┌п ╪│█М┌й█М┘И╪▒┘╣█М", "╪з█М┘И┘Ж┘╣ ╪│█М┌й█М┘И╪▒┘╣█М"] },
    },
  },
  {
    id: "sales",
    icon: "ЁЯЫТ",
    subcategories: ["Shop Worker", "Cashier"],
    translations: {
      en: { name: "Sales Assistant", subcategories: ["Shop Worker", "Cashier"] },
      hi: { name: "рд╕реЗрд▓реНрд╕ рдЕрд╕рд┐рд╕реНрдЯреЗрдВрдЯ", subcategories: ["рджреБрдХрд╛рди рдХрд░реНрдордЪрд╛рд░реА", "рдХреИрд╢рд┐рдпрд░"] },
      bn: { name: "ржмрж┐ржХрзНрж░ржпрж╝ рж╕рж╣рж╛ржпрж╝ржХ", subcategories: ["ржжрзЛржХрж╛ржи ржХрж░рзНржорзА", "ржХрзНржпрж╛рж╢рж┐ржпрж╝рж╛рж░"] },
      te: { name: "р░╕р▒Зр░▓р▒Нр░╕р▒Н р░Ер░╕р░┐р░╕р▒Нр░Яр▒Жр░Вр░Яр▒Н", subcategories: ["р░╖р░╛р░кр▒Н р░╡р░░р▒Нр░Хр░░р▒Н", "р░Хр▒Нр░пр░╛р░╖р░┐р░пр░░р▒Н"] },
      ta: { name: "ро╡ро┐ро▒рпНрокройрпИ роЙродро╡ро┐ропро╛ро│ро░рпН", subcategories: ["роХроЯрпИ роКро┤ро┐ропро░рпН", "роХро╛роЪро╛ро│ро░рпН"] },
      mr: { name: "рд╕реЗрд▓реНрд╕ рдЕрд╕рд┐рд╕реНрдЯрдВрдЯ", subcategories: ["рджреБрдХрд╛рди рдХрд╛рдордЧрд╛рд░", "рдХреЕрд╢рд┐рдпрд░"] },
      gu: { name: "рк╕рлЗрк▓рлНрк╕ ркЖрк╕рк┐рк╕рлНркЯркирлНркЯ", subcategories: ["ркжрлБркХрк╛рки ркХрк╛ркоркжрк╛рк░", "ркХрлЗрк╢рк┐ркпрк░"] },
      kn: { name: "р▓╕р│Зр▓▓р│Нр▓╕р│Н р▓Ер▓╕р▓┐р▓╕р│Нр▓Яр│Жр▓Вр▓Яр│Н", subcategories: ["р▓Ер▓Вр▓Чр▓бр▓┐ р▓Хр│Жр▓▓р▓╕р▓Чр▓╛р▓░", "р▓Хр│Нр▓пр▓╛р▓╖р▓┐р▓пр▓░р│Н"] },
      ml: { name: "р┤╕р╡Жр┤пр┤┐р╡╜р┤╕р╡Н р┤Ер┤╕р┤┐р┤╕р╡Нр┤▒р╡Нр┤Яр┤ир╡Нр┤▒р╡Н", subcategories: ["р┤╖р╡Лр┤кр╡Нр┤кр╡Н р┤╡р╡╝р┤Хр╡Нр┤Хр╡╝", "р┤Хр┤╛р┤╖р┤┐р┤пр╡╝"] },
      pa: { name: "ри╕рйЗри▓риЬри╝ риЕри╕ри┐ри╕риЯрйИриВриЯ", subcategories: ["рижрйБриХри╛рии риХри░риориЪри╛ри░рйА", "риХрйИри╕ри╝рйАриЕри░"] },
      or: { name: "рм╕рнЗрм▓рнНрм╕ рмЖрм╕рм┐рм╖рнНрмЯрм╛рмгрнНрмЯ", subcategories: ["рмжрнЛрмХрм╛рми рмХрм░рнНрмормЪрм╛рм░рнА", "рмХрнНрнЯрм╛рм╕рм┐рмЕрм░"] },
      as: { name: "ржмрж┐ржХрзНрз░ржпрж╝ рж╕рж╣рж╛ржпрж╝ржХ", subcategories: ["ржжрзЛржХрж╛ржи ржХрз░рзНржорзА", "ржХрзЗржЫрж┐ржпрж╝рж╛рз░"] },
      ur: { name: "╪│█М┘Д╪▓ ╪з╪│╪│┘╣┘Ж┘╣", subcategories: ["╪п┌й╪з┘Ж ┘И╪▒┌й╪▒", "┌й█М╪┤█М╪ж╪▒"] },
    },
  },
  {
    id: "marketing",
    icon: "ЁЯУв",
    subcategories: ["Field Marketing", "Promoter"],
    translations: {
      en: { name: "Field Marketing Worker", subcategories: ["Field Marketing", "Promoter"] },
      hi: { name: "рдлреАрд▓реНрдб рдорд╛рд░реНрдХреЗрдЯрд┐рдВрдЧ рд╡рд░реНрдХрд░", subcategories: ["рдлреАрд▓реНрдб рдорд╛рд░реНрдХреЗрдЯрд┐рдВрдЧ", "рдкреНрд░рдореЛрдЯрд░"] },
      bn: { name: "ржлрж┐рж▓рзНржб ржорж╛рж░рзНржХрзЗржЯрж┐ржВ ржХрж░рзНржорзА", subcategories: ["ржлрж┐рж▓рзНржб ржорж╛рж░рзНржХрзЗржЯрж┐ржВ", "ржкрзНрж░ржорзЛржЯрж╛рж░"] },
      te: { name: "р░лр▒Ар░▓р▒Нр░бр▒Н р░ор░╛р░░р▒Нр░Хр▒Жр░Яр░┐р░Вр░Чр▒Н р░╡р░░р▒Нр░Хр░░р▒Н", subcategories: ["р░лр▒Ар░▓р▒Нр░бр▒Н р░ор░╛р░░р▒Нр░Хр▒Жр░Яр░┐р░Вр░Чр▒Н", "р░кр▒Нр░░р░ор▒Лр░Яр░░р▒Н"] },
      ta: { name: "роХро│ роЪроирпНродрпИрокрпНрокроЯрпБродрпНродро▓рпН родрпКро┤ро┐ро▓ро╛ро│ро┐", subcategories: ["роХро│ роЪроирпНродрпИрокрпНрокроЯрпБродрпНродро▓рпН", "ро╡ро┐ро│роорпНрокро░родро╛ро░ро░рпН"] },
      mr: { name: "рдлреАрд▓реНрдб рдорд╛рд░реНрдХреЗрдЯрд┐рдВрдЧ рд╡рд░реНрдХрд░", subcategories: ["рдлреАрд▓реНрдб рдорд╛рд░реНрдХреЗрдЯрд┐рдВрдЧ", "рдкреНрд░рдореЛрдЯрд░"] },
      gu: { name: "рклрлАрк▓рлНркб ркорк╛рк░рлНркХрлЗркЯрк┐ркВркЧ рк╡рк░рлНркХрк░", subcategories: ["рклрлАрк▓рлНркб ркорк╛рк░рлНркХрлЗркЯрк┐ркВркЧ", "рккрлНрк░ркорлЛркЯрк░"] },
      kn: { name: "р▓лр│Ар▓▓р│Нр▓бр│Н р▓ор▓╛р▓░р│Нр▓Хр│Жр▓Яр▓┐р▓Вр▓Чр│Н р▓╡р▓░р│Нр▓Хр▓░р│Н", subcategories: ["р▓лр│Ар▓▓р│Нр▓бр│Н р▓ор▓╛р▓░р│Нр▓Хр│Жр▓Яр▓┐р▓Вр▓Чр│Н", "р▓кр│Нр▓░р▓ор│Лр▓Яр▓░р│Н"] },
      ml: { name: "р┤лр╡Ар╡╜р┤бр╡Н р┤ор┤╛р╡╝р┤Хр╡Нр┤Хр┤▒р╡Нр┤▒р┤┐р┤Вр┤Чр╡Н р┤╡р╡╝р┤Хр╡Нр┤Хр╡╝", subcategories: ["р┤лр╡Ар╡╜р┤бр╡Н р┤ор┤╛р╡╝р┤Хр╡Нр┤Хр┤▒р╡Нр┤▒р┤┐р┤Вр┤Чр╡Н", "р┤кр╡Нр┤░р┤ор╡Лр┤Яр╡Нр┤Яр╡╝"] },
      pa: { name: "рилрйАри▓риб риори╛ри░риХрйАриЯри┐рй░риЧ ри╡ри░риХри░", subcategories: ["рилрйАри▓риб риори╛ри░риХрйАриЯри┐рй░риЧ", "рикрйНри░риорйЛриЯри░"] },
      or: { name: "рмлрм┐рм▓рнНрмб рморм╛рм░рнНрмХрнЗрмЯрм┐рмВ рн▒рм░рнНрмХрм░", subcategories: ["рмлрм┐рм▓рнНрмб рморм╛рм░рнНрмХрнЗрмЯрм┐рмВ", "рмкрнНрм░рморнЛрмЯрм░"] },
      as: { name: "ржлрж┐рж▓рзНржб ржорж╛рз░рзНржХрзЗржЯрж┐ржВ рз▒рз░рзНржХрж╛рз░", subcategories: ["ржлрж┐рж▓рзНржб ржорж╛рз░рзНржХрзЗржЯрж┐ржВ", "ржкрзНрз░ржорзЛржЯрж╛рз░"] },
      ur: { name: "┘Б█М┘Д┌И ┘Е╪з╪▒┌й█М┘╣┘Ж┌п ┘И╪▒┌й╪▒", subcategories: ["┘Б█М┘Д┌И ┘Е╪з╪▒┌й█М┘╣┘Ж┌п", "┘╛╪▒┘И┘Е┘И┘╣╪▒"] },
    },
  },
  {
    id: "mechanic",
    icon: "ЁЯФз",
    subcategories: ["Two-wheeler", "Four-wheeler"],
    translations: {
      en: { name: "Mechanic", subcategories: ["Two-wheeler", "Four-wheeler"] },
      hi: { name: "рдореИрдХреЗрдирд┐рдХ", subcategories: ["рджреЛ рдкрд╣рд┐рдпрд╛", "рдЪрд╛рд░ рдкрд╣рд┐рдпрд╛"] },
      bn: { name: "ржорзЗржХрж╛ржирж┐ржХ", subcategories: ["ржжрзБржЗ ржЪрж╛ржХрж╛", "ржЪрж╛рж░ ржЪрж╛ржХрж╛"] },
      te: { name: "р░ор▒Жр░Хр░╛р░ир░┐р░Хр▒Н", subcategories: ["р░░р▒Жр░Вр░бр▒Б р░Ър░Хр▒Нр░░р░╛р░▓р▒Б", "р░ир░╛р░▓р▒Бр░Чр▒Б р░Ър░Хр▒Нр░░р░╛р░▓р▒Б"] },
      ta: { name: "роорпЖроХрпНроХро╛ройро┐роХрпН", subcategories: ["роЗро░рпБ роЪроХрпНроХро░ ро╡ро╛роХройроорпН", "роиро╛ройрпНроХрпБ роЪроХрпНроХро░ ро╡ро╛роХройроорпН"] },
      mr: { name: "рдореЗрдХреЕрдирд┐рдХ", subcategories: ["рджреБрдЪрд╛рдХреА", "рдЪрд╛рд░рдЪрд╛рдХреА"] },
      gu: { name: "ркорк┐ркХрлЗркирк┐ркХ", subcategories: ["ркмрлЗ ркЪркХрлНркХрк╛", "ркЪрк╛рк░ ркЪркХрлНркХрк╛"] },
      kn: { name: "р▓ор│Жр▓Хр│Нр▓пр▓╛р▓ир▓┐р▓Хр│Н", subcategories: ["р▓Ор▓░р▓бр│Б р▓Ър▓Хр│Нр▓░", "р▓ир▓╛р▓▓р│Нр▓Хр│Б р▓Ър▓Хр│Нр▓░"] },
      ml: { name: "р┤ор╡Жр┤Хр╡Нр┤Хр┤╛р┤ир┤┐р┤Хр╡Н", subcategories: ["р┤░р┤гр╡Нр┤Яр╡Н р┤Ър┤Хр╡Нр┤░р┤В", "р┤ир┤╛р┤▓р╡Н р┤Ър┤Хр╡Нр┤░р┤В"] },
      pa: { name: "риориХрйИриири┐риХ", subcategories: ["рижрйЛ рикри╣рйАриЖ", "риЪри╛ри░ рикри╣рйАриЖ"] },
      or: { name: "рморнЗрмХрм╛рмирм┐рмХ", subcategories: ["рмжрнБрмЗ рмЪрмХрнНрм░", "рмЪрм╛рм░рм┐ рмЪрмХрнНрм░"] },
      as: { name: "ржорзЗржХрж╛ржирж┐ржХ", subcategories: ["ржжрзБржЗ ржЪржХрж╛", "ржЪрж╛рз░рж┐ ржЪржХрж╛"] },
      ur: { name: "┘Е┌й█М┘Ж┌й", subcategories: ["╪п┘И ┘╛█Б█М█Б", "┌Ж╪з╪▒ ┘╛█Б█М█Б"] },
    },
  },
]

// Audio prompts in different languages
const audioPrompts = {
  en: "Please choose the job that you do for work",
  hi: "рдХреГрдкрдпрд╛ рд╡рд╣ рдХрд╛рдо рдЪреБрдиреЗрдВ рдЬреЛ рдЖрдк рдХрд╛рдо рдХреЗ рд▓рд┐рдП рдХрд░рддреЗ рд╣реИрдВ",
  bn: "ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржЖржкржирж┐ ржХрж╛ржЬрзЗрж░ ржЬржирзНржп ржпрзЗ ржХрж╛ржоржЯрж┐ ржХрж░рзЗржи рждрж╛ ржмрзЗржЫрзЗ ржирж┐ржи",
  te: "р░жр░пр░Ър▒Зр░╕р░┐ р░ор▒Ар░░р▒Б р░кр░ир░┐ р░Хр▒Лр░╕р░В р░Ър▒Зр░╕р▒З р░Йр░жр▒Нр░пр▒Лр░Чр░╛р░ир▒Нр░ир░┐ р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐",
  ta: "родропро╡рпБроЪрпЖропрпНродрпБ роирпАроЩрпНроХро│рпН ро╡рпЗро▓рпИроХрпНроХро╛роХ роЪрпЖропрпНропрпБроорпН ро╡рпЗро▓рпИропрпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН",
  mr: "рдХреГрдкрдпрд╛ рддреБрдореНрд╣реА рдХрд╛рдорд╛рд╕рд╛рдареА рдХрд░рдд рдЕрд╕рд▓реЗрд▓реЗ рдХрд╛рдо рдирд┐рд╡рдбрд╛",
  gu: "ркХрлГрккрк╛ ркХрк░рлАркирлЗ ркдркорлЗ ркХрк╛рко ркорк╛ркЯрлЗ ркЬрлЗ ркХрк╛рко ркХрк░рлЛ ркЫрлЛ ркдрлЗ рккрк╕ркВркж ркХрк░рлЛ",
  kn: "р▓жр▓пр▓╡р▓┐р▓Яр│Нр▓Яр│Б р▓ир│Ар▓╡р│Б р▓Хр│Жр▓▓р▓╕р▓Хр│Нр▓Хр▓╛р▓Чр▓┐ р▓ор▓╛р▓бр│Бр▓╡ р▓Хр│Жр▓▓р▓╕р▓╡р▓ир│Нр▓ир│Б р▓Жр▓пр│Нр▓Хр│Жр▓ор▓╛р▓бр▓┐",
  ml: "р┤жр┤пр┤╡р┤╛р┤пр┤┐ р┤ир┤┐р┤Щр╡Нр┤Щр╡╛ р┤Ьр╡Лр┤▓р┤┐р┤Хр╡Нр┤Хр┤╛р┤пр┤┐ р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤ир╡Нр┤и р┤Ьр╡Лр┤▓р┤┐ р┤др┤┐р┤░р┤Юр╡Нр┤Юр╡Жр┤Яр╡Бр┤Хр╡Нр┤Хр╡Бр┤Х",
  pa: "риХри┐ри░рикри╛ риХри░риХрйЗ риЙри╣ риХрй░рио риЪрйБригрйЛ риЬрйЛ ридрйБри╕рйАриВ риХрй░рио ри▓риИ риХри░рижрйЗ ри╣рйЛ",
  or: "рмжрнЯрм╛рмХрм░рм┐ рмЖрмкрмг рмХрм╛рмо рмкрм╛рмЗрмБ рмХрм░рнБрмерм┐рммрм╛ рмХрм╛рмо рммрм╛рмЫрмирнНрмдрнБ",
  as: "ржЕржирзБржЧрзНрз░рж╣ ржХрз░рж┐ ржЖржкрзБржирж┐ ржХрж╛ржорз░ ржмрж╛ржмрзЗ ржХрз░рж╛ ржХрж╛ржоржЯрзЛ ржмрж╛ржЫржирж┐ ржХрз░ржХ",
  ur: "╪и╪▒╪з█Б ┌й╪▒┘Е ┘И█Б ┌й╪з┘Е ┘Е┘Ж╪к╪о╪и ┌й╪▒█М┌║ ╪м┘И ╪в┘╛ ┌й╪з┘Е ┌й█Т ┘Д█М█Т ┌й╪▒╪к█Т █Б█М┌║",
}

// Page titles in different languages
const pageTitles = {
  en: "Choose Your Profession",
  hi: "рдЕрдкрдирд╛ рдкреЗрд╢рд╛ рдЪреБрдиреЗрдВ",
  bn: "ржЖржкржирж╛рж░ ржкрзЗрж╢рж╛ ржмрзЗржЫрзЗ ржирж┐ржи",
  te: "р░ор▒А р░╡р▒Гр░др▒Нр░др░┐р░ир░┐ р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐",
  ta: "роЙроЩрпНроХро│рпН родрпКро┤ро┐ро▓рпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН",
  mr: "рддреБрдордЪрд╛ рд╡реНрдпрд╡рд╕рд╛рдп рдирд┐рд╡рдбрд╛",
  gu: "ркдркорк╛рк░рлЛ рк╡рлНркпрк╡рк╕рк╛ркп рккрк╕ркВркж ркХрк░рлЛ",
  kn: "р▓ир▓┐р▓ор│Нр▓о р▓╡р│Гр▓др│Нр▓др▓┐р▓пр▓ир│Нр▓ир│Б р▓Жр▓пр│Нр▓Хр│Жр▓ор▓╛р▓бр▓┐",
  ml: "р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤др╡Кр┤┤р┤┐р╡╜ р┤др┤┐р┤░р┤Юр╡Нр┤Юр╡Жр┤Яр╡Бр┤Хр╡Нр┤Хр╡Бр┤Х",
  pa: "риЖрикригри╛ рикрйЗри╕ри╝ри╛ риЪрйБригрйЛ",
  or: "рмЖрмкрмгрмЩрнНрмХрм░ рммрнГрмдрнНрмдрм┐ рммрм╛рмЫрмирнНрмдрнБ",
  as: "ржЖржкрзЛржирж╛рз░ ржкрзЗржЫрж╛ ржмрж╛ржЫржирж┐ ржХрз░ржХ",
  ur: "╪з┘╛┘Ж╪з ┘╛█М╪┤█Б ┘Е┘Ж╪к╪о╪и ┌й╪▒█М┌║",
}

export function ProfessionSelection() {
  const [selectedLanguage, setSelectedLanguage] = useState<string>("en")
  const [selectedProfession, setSelectedProfession] = useState<string | null>(null)
  const [isAudioPlaying, setIsAudioPlaying] = useState(false)
  const [audioEnabled, setAudioEnabled] = useState(true)
  const [showModeModal, setShowModeModal] = useState(false)
  const router = useRouter()

  useEffect(() => {
    // Get selected language from localStorage
    const language = localStorage.getItem("selectedLanguage") || "en"
    setSelectedLanguage(language)

    // Play audio prompt when page loads
    if (audioEnabled) {
      playAudioPrompt(language)
    }
  }, [audioEnabled])

  const playAudioPrompt = (language: string) => {
    if (!audioEnabled) return

    setIsAudioPlaying(true)
    const prompt = audioPrompts[language as keyof typeof audioPrompts] || audioPrompts.en

    // Use Web Speech API for text-to-speech
    if ("speechSynthesis" in window) {
      const utterance = new SpeechSynthesisUtterance(prompt)

      // Set language for speech synthesis
      const speechLangMap: { [key: string]: string } = {
        en: "en-US",
        hi: "hi-IN",
        bn: "bn-IN",
        te: "te-IN",
        ta: "ta-IN",
        mr: "mr-IN",
        gu: "gu-IN",
        kn: "kn-IN",
        ml: "ml-IN",
        pa: "pa-IN",
        or: "or-IN",
        as: "as-IN",
        ur: "ur-IN",
      }

      utterance.lang = speechLangMap[language] || "en-US"
      utterance.rate = 0.8
      utterance.pitch = 1

      utterance.onend = () => {
        setIsAudioPlaying(false)
      }

      utterance.onerror = () => {
        setIsAudioPlaying(false)
      }

      speechSynthesis.speak(utterance)
    } else {
      setIsAudioPlaying(false)
    }
  }

  const handleProfessionSelect = (professionId: string) => {
    setSelectedProfession(professionId)

    // Store selected profession
    localStorage.setItem("selectedProfession", professionId)

    setShowModeModal(true)
  }

  const handleModeSelect = (mode: "guided" | "freeform") => {
    localStorage.setItem("selectedMode", mode)
    setShowModeModal(false)

    // Navigate to resume creation with selected mode
    setTimeout(() => {
      router.push("/resume-creation")
    }, 300)
  }

  const toggleAudio = () => {
    if (isAudioPlaying) {
      speechSynthesis.cancel()
      setIsAudioPlaying(false)
    }
    setAudioEnabled(!audioEnabled)
  }

  const replayAudio = () => {
    if (audioEnabled) {
      speechSynthesis.cancel()
      playAudioPrompt(selectedLanguage)
    }
  }

//   return (
//     <div className="min-h-screen bg-gradient-to-br from-blue-900 via-purple-900 to-indigo-900 relative overflow-hidden">
//       {/* Background pattern */}
//       <div className="absolute inset-0 opacity-10">
//         <div
//           className="absolute inset-0"
//           style={{
//             backgroundImage: `url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fillRule='evenodd'%3E%3Cg fill='%23ffffff' fillOpacity='0.1'%3E%3Ccircle cx='30' cy='30' r='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E")`,
//           }}
//         ></div>
//       </div>

//       {/* Header */}
//       <header className="relative z-10 flex justify-between items-center p-6">
//         <div className="flex items-center space-x-2">
//           <div className="w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center">
//             <svg className="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
//               <path d="M7 4V2a1 1 0 011-1h4a1 1 0 011 1v2h4a1 1 0 110 2h-1v10a2 2 0 01-2 2H6a2 2 0 01-2-2V6H3a1 1 0 110-2h4zM9 4h2V3H9v1zm-4 2v9a1 1 0 001 1h8a1 1 0 001-1V6H5z" />
//             </svg>
//           </div>
//           <h1 className="text-2xl font-bold text-white">Vocal Resume</h1>
//         </div>

//         <div className="flex items-center space-x-2">
//           {/* Audio controls */}
//           <Button
//             variant="outline"
//             size="sm"
//             className="bg-white/10 border-white/20 text-white hover:bg-white/20"
//             onClick={replayAudio}
//             disabled={isAudioPlaying}
//           >
//             <Volume2 className="w-4 h-4 mr-1" />
//             {isAudioPlaying ? "Playing..." : "Replay"}
//           </Button>

//           <Button
//             variant="outline"
//             size="sm"
//             className="bg-white/10 border-white/20 text-white hover:bg-white/20"
//             onClick={toggleAudio}
//           >
//             {audioEnabled ? <Volume2 className="w-4 h-4" /> : <VolumeX className="w-4 h-4" />}
//           </Button>

//           <Button
//             variant="outline"
//             className="bg-white/10 border-white/20 text-white hover:bg-white/20"
//             onClick={() => router.back()}
//           >
//             Back
//           </Button>
//         </div>
//       </header>

//       {/* Main Content */}
//       <main className="relative z-10 flex flex-col items-center justify-center min-h-[calc(100vh-120px)] px-6">
//         <div className="max-w-6xl mx-auto text-center">
//           <div className="mb-8">
//             <h2 className="text-4xl md:text-5xl font-bold text-white mb-4">
//               {pageTitles[selectedLanguage as keyof typeof pageTitles] || pageTitles.en}
//             </h2>
//             <p className="text-xl text-gray-200 max-w-2xl mx-auto">
//               {selectedLanguage === "hi" && "рдЕрдкрдирд╛ рдкреЗрд╢рд╛ рдЪреБрдиреЗрдВ рдФрд░ рдЕрдкрдирд╛ рд░рд┐рдЬреНрдпреВрдореЗ рдмрдирд╛рдирд╛ рд╢реБрд░реВ рдХрд░реЗрдВ"}
//               {selectedLanguage === "bn" && "ржЖржкржирж╛рж░ ржкрзЗрж╢рж╛ ржмрзЗржЫрзЗ ржирж┐ржи ржПржмржВ ржЖржкржирж╛рж░ рж░рж┐ржЬрж┐ржЙржорзЗ рждрзИрж░рж┐ ржХрж░рж╛ рж╢рзБрж░рзБ ржХрж░рзБржи"}
//               {selectedLanguage === "te" && "р░ор▒А р░╡р▒Гр░др▒Нр░др░┐р░ир░┐ р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐ р░ор░░р░┐р░пр▒Б р░ор▒А р░░р▒Жр░Ьр▒Нр░пр▒Вр░ор▒Нр░ир▒Б р░░р▒Вр░кр▒Кр░Вр░жр░┐р░Вр░Ър░бр░В р░кр▒Нр░░р░╛р░░р░Вр░нр░┐р░Вр░Ър░Вр░бр░┐"}
//               {selectedLanguage === "ta" && "роЙроЩрпНроХро│рпН родрпКро┤ро┐ро▓рпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБродрпНродрпБ роЙроЩрпНроХро│рпН ро░рпЖро╕рпНропрпВрооя┐╜я┐╜ роЙро░рпБро╡ро╛роХрпНроХродрпН родрпКроЯроЩрпНроХрпБроЩрпНроХро│рпН"}
//               {selectedLanguage === "mr" && "рддреБрдордЪрд╛ рд╡реНрдпрд╡рд╕рд╛рдп рдирд┐рд╡рдбрд╛ рдЖрдгрд┐ рддреБрдордЪрд╛ рд░рд┐рдЭреНрдпреВрдореЗ рддрдпрд╛рд░ рдХрд░рдгреНрдпрд╛рд╕ рд╕реБрд░реБрд╡рд╛рдд рдХрд░рд╛"}
//               {selectedLanguage === "gu" && "ркдркорк╛рк░рлЛ рк╡рлНркпрк╡рк╕рк╛ркп рккрк╕ркВркж ркХрк░рлЛ ркЕркирлЗ ркдркорк╛рк░рлЛ рк░рк┐ркЭрлНркпрлВркорлЗ ркмркирк╛рк╡рк╡рк╛ркирлБркВ рк╢рк░рлВ ркХрк░рлЛ"}
//               {selectedLanguage === "kn" && "р▓ир▓┐р▓ор│Нр▓о р▓╡р│Гр▓др│Нр▓др▓┐р▓пр▓ир│Нр▓ир│Б р▓Жр▓пр│Нр▓Хр│Жр▓ор▓╛р▓бр▓┐ р▓ор▓др│Нр▓др│Б р▓ир▓┐р▓ор│Нр▓о р▓░р│Жр▓╕р│Нр▓пр│Вр▓ор│Н р▓Ер▓ир│Нр▓ир│Б р▓░р▓Ър▓┐р▓╕р▓▓р│Б р▓кр│Нр▓░р▓╛р▓░р▓Вр▓нр▓┐р▓╕р▓┐"}
//               {selectedLanguage === "ml" && "р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤др╡Кр┤┤р┤┐р╡╜ р┤др┤┐р┤░р┤Юр╡Нр┤Юр╡Жр┤Яр╡Бр┤др╡Нр┤др╡Н р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤▒р╡Жр┤╕р╡Нр┤пр╡Вр┤ор╡Ж р┤╕р╡Гр┤╖р╡Нр┤Яр┤┐р┤Хр╡Нр┤Хр┤╛р╡╗ р┤Жр┤░р┤Вр┤нр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х"}
//               {selectedLanguage === "pa" && "риЖрикригри╛ рикрйЗри╕ри╝ри╛ риЪрйБригрйЛ риЕридрйЗ риЖрикригри╛ ри░ри┐риЬри╝ри┐риКриорйЗ римригри╛риЙригри╛ ри╕ри╝рйБри░рйВ риХри░рйЛ"}
//               {selectedLanguage === "or" && "рмЖрмкрмгрмЩрнНрмХрм░ рммрнГрмдрнНрмдрм┐ рммрм╛рмЫрмирнНрмдрнБ рмПрммрмВ рмЖрмкрмгрмЩрнНрмХрм░ рм░рм┐рмЬрнНрнЯрнБрморнН рмдрм┐рмЖрм░рм┐ рмХрм░рм┐рммрм╛ рмЖрм░рморнНрмн рмХрм░рмирнНрмдрнБ"}
//               {selectedLanguage === "as" && "ржЖржкрзЛржирж╛рз░ ржкрзЗржЫрж╛ ржмрж╛ржЫржирж┐ ржХрз░ржХ ржЖрз░рзБ ржЖржкрзЛржирж╛рз░ рз░рж┐ржЬрж┐ржЙржорзЗ рж╕рзГрж╖рзНржЯрж┐ ржХрз░рж╛ ржЖрз░ржорзНржн ржХрз░ржХ"}
//               {selectedLanguage === "ur" && "╪з┘╛┘Ж╪з ┘╛█М╪┤█Б ┘Е┘Ж╪к╪о╪и ┌й╪▒█М┌║ ╪з┘И╪▒ ╪з┘╛┘Ж╪з ╪▒█М╪▓█М┘И┘Е█Т ╪и┘Ж╪з┘Ж╪з ╪┤╪▒┘И╪╣ ┌й╪▒█М┌║"}
//               {(selectedLanguage === "en" || !selectedLanguage) &&
//                 "Select your profession and start creating your resume"}
//             </p>
//           </div>

//           {/* Profession Grid */}
//           <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 max-w-6xl mx-auto">
//             {professions.map((profession) => {
//               const translation =
//                 profession.translations[selectedLanguage as keyof typeof profession.translations] ||
//                 profession.translations.en

//               return (
//                 <Button
//                   key={profession.id}
//                   variant="outline"
//                   className={`
//                     h-32 flex flex-col items-center justify-center space-y-2 p-4
//                     bg-white/10 border-white/20 text-white hover:bg-white/20 
//                     transition-all duration-300 hover:scale-105
//                     ${selectedProfession === profession.id ? "bg-blue-600/50 border-blue-400" : ""}
//                   `}
//                   onClick={() => handleProfessionSelect(profession.id)}
//                 >
//                   <div className="text-4xl mb-2">{profession.icon}</div>
//                   <span className="text-sm font-semibold text-center leading-tight">{translation.name}</span>
//                   <div className="text-xs text-gray-300 text-center">
//                     {translation.subcategories.slice(0, 2).join(", ")}
//                   </div>
//                 </Button>
//               )
//             })}
//           </div>

//           {/* Audio Status */}
//           {isAudioPlaying && (
//             <div className="mt-8 bg-blue-600/20 backdrop-blur-sm rounded-lg p-4 max-w-md mx-auto">
//               <div className="flex items-center justify-center space-x-2">
//                 <Volume2 className="w-5 h-5 text-blue-400 animate-pulse" />
//                 <span className="text-white">
//                   {selectedLanguage === "hi" && "рдСрдбрд┐рдпреЛ рдЪрд▓ рд░рд╣рд╛ рд╣реИ..."}
//                   {selectedLanguage === "bn" && "ржЕржбрж┐ржУ ржЪрж▓ржЫрзЗ..."}
//                   {selectedLanguage === "te" && "р░Жр░бр░┐р░пр▒Л р░кр▒Нр░▓р▒З р░Ер░╡р▒Бр░др▒Лр░Вр░жр░┐..."}
//                   {selectedLanguage === "ta" && "роЖроЯро┐ропрпЛ роЗропроЩрпНроХрпБроХро┐ро▒родрпБ..."}
//                   {selectedLanguage === "mr" && "рдСркбрд┐рдУ рдЪрд╛рд▓реВ рдЖрд╣реЗ..."}
//                   {selectedLanguage === "gu" && "ркУркбрк┐ркпрлЛ ркЪрк╛рк▓рлА рк░рк╣рлНркпрлЛ ркЫрлЗ..."}
//                   {selectedLanguage === "kn" && "р▓Жр▓бр▓┐р▓пр│Л р▓кр│Нр▓▓р│З р▓Жр▓Чр│Бр▓др│Нр▓др▓┐р▓жр│Ж..."}
//                   {selectedLanguage === "ml" && "р┤Ур┤бр┤┐р┤пр╡Л р┤кр╡Нр┤▓р╡З р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤ир╡Нр┤ир╡Б..."}
//                   {selectedLanguage === "pa" && "риЖрибрйАриУ риЪрй▒ри▓ ри░ри┐ри╣ри╛ ри╣рйИ..."}
//                   {selectedLanguage === "or" && "рмЕрмбрм┐рмУ рмЪрм╛рм▓рнБрмЫрм┐..."}
//                   {selectedLanguage === "as" && "ржЕрмбрж┐ржЕ' ржЪрж▓рж┐ ржЖржЫрзЗ..."}
//                   {selectedLanguage === "ur" && "╪в┌И█М┘И ┌Ж┘Д ╪▒█Б╪з █Б█Т..."}
//                   {(selectedLanguage === "en" || !selectedLanguage) && "Audio playing..."}
//                 </span>
//               </div>
//             </div>
//           )}
//         </div>
//       </main>

//       {/* Mode Selection Modal */}
//       <ModeSelectionModal
//         isOpen={showModeModal}
//         onClose={() => setShowModeModal(false)}
//         onModeSelect={handleModeSelect}
//         selectedLanguage={selectedLanguage}
//       />
//     </div>
//   )
// }

 return (
    <div className="min-h-screen bg-white relative overflow-hidden">
      <header className="relative z-10 flex justify-between items-center p-6 border-b border-gray-200">
        <div className="flex items-center space-x-2">
          <div className="w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center">
            <svg className="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path d="M7 4V2a1 1 0 011-1h4a1 1 0 011 1v2h4a1 1 0 110 2h-1v10a2 2 0 01-2 2H6a2 2 0 01-2-2V6H3a1 1 0 110-2h4zM9 4h2V3H9v1zm-4 2v9a1 1 0 001 1h8a1 1 0 001-1V6H5z" />
            </svg>
          </div>
          <h1 className="text-2xl font-bold text-gray-900">Vocal Resume</h1>
        </div>

        <div className="flex items-center space-x-2">
          <Button
            variant="outline"
            size="sm"
            className="bg-gray-100 border-gray-300 text-gray-700 hover:bg-gray-200"
            onClick={replayAudio}
            disabled={isAudioPlaying}
          >
            <Volume2 className="w-4 h-4 mr-1" />
            {isAudioPlaying ? "Playing..." : "Replay"}
          </Button>

          <Button
            variant="outline"
            size="sm"
            className="bg-gray-100 border-gray-300 text-gray-700 hover:bg-gray-200"
            onClick={toggleAudio}
          >
            {audioEnabled ? <Volume2 className="w-4 h-4" /> : <VolumeX className="w-4 h-4" />}
          </Button>

          <Button
            variant="outline"
            className="bg-gray-100 border-gray-300 text-gray-700 hover:bg-gray-200"
            onClick={() => router.back()}
          >
            Back
          </Button>
        </div>
      </header>

      <main className="relative z-10 flex flex-col items-center justify-center min-h-[calc(100vh-120px)] px-6">
        <div className="max-w-6xl mx-auto text-center">
          <div className="mb-8">
            <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
              {pageTitles[selectedLanguage as keyof typeof pageTitles] || pageTitles.en}
            </h2>
            <p className="text-xl text-gray-600 max-w-2xl mx-auto">
              {selectedLanguage === "hi" && "рдЕрдкрдирд╛ рдкреЗрд╢рд╛ рдЪреБрдиреЗрдВ рдФрд░ рдЕрдкрдирд╛ рд░рд┐рдЬреНрдпреВрдореЗ рдмрдирд╛рдирд╛ рд╢реБрд░реВ рдХрд░реЗрдВ"}
              {selectedLanguage === "bn" && "ржЖржкржирж╛рж░ ржкрзЗрж╢рж╛ ржмрзЗржЫрзЗ ржирж┐ржи ржПржмржВ ржЖржкржирж╛рж░ рж░рж┐ржЬрж┐ржЙржорзЗ рждрзИрж░рж┐ ржХрж░рж╛ рж╢рзБрж░рзБ ржХрж░рзБржи"}
              {selectedLanguage === "te" && "р░ор▒А р░╡р▒Гр░др▒Нр░др░┐р░ир░┐ р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐ р░ор░░р░┐р░пр▒Б р░ор▒А р░░р▒Жр░Ьр▒Нр░пр▒Вр░ор▒Нр░ир▒Б р░░р▒Вр░кр▒Кр░Вр░жр░┐р░Вр░Ър░бр░В р░кр▒Нр░░р░╛р░░р░Вр░нр░┐р░Вр░Ър░Вр░бр░┐"}
              {selectedLanguage === "ta" && "роЙроЩрпНроХро│рпН родрпКро┤ро┐ро▓рпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБродрпНродрпБ роЙроЩрпНроХро│рпН ро░рпЖро╕рпНропрпВроорпЗ роЙро░рпБро╡ро╛роХрпНроХродрпН родрпКроЯроЩрпНроХрпБроЩрпНроХро│рпН"}
              {selectedLanguage === "mr" && "рддреБрдордЪрд╛ рд╡реНрдпрд╡рд╕рд╛рдп рдирд┐рд╡рдбрд╛ рдЖрдгрд┐ рддреБрдордЪрд╛ рд░рд┐рдЭреНрдпреВрдореЗ рддрдпрд╛рд░ рдХрд░рдгреНрдпрд╛рд╕ рд╕реБрд░реБрд╡рд╛рдд рдХрд░рд╛"}
              {selectedLanguage === "gu" && "ркдркорк╛рк░рлЛ рк╡рлНркпрк╡рк╕рк╛ркп рккрк╕ркВркж ркХрк░рлЛ ркЕркирлЗ ркдркорк╛рк░рлЛ рк░рк┐ркЭрлНркпрлВркорлЗ ркмркирк╛рк╡рк╡рк╛ркирлБркВ рк╢рк░рлВ ркХрк░рлЛ"}
              {selectedLanguage === "kn" && "р▓ир▓┐р▓ор│Нр▓о р▓╡р│Гр▓др│Нр▓др▓┐р▓пр▓ир│Нр▓ир│Б р▓Жр▓пр│Нр▓Хр│Жр▓ор▓╛р▓бр▓┐ р▓ор▓др│Нр▓др│Б р▓ир▓┐р▓ор│Нр▓о р▓░р│Жр▓╕р│Нр▓пр│Вр▓ор│Н р▓Ер▓ир│Нр▓ир│Б р▓░р▓Ър▓┐р▓╕р▓▓р│Б р▓кр│Нр▓░р▓╛р▓░р▓Вр▓нр▓┐р▓╕р▓┐"}
              {selectedLanguage === "ml" && "р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤др╡Кр┤┤р┤┐р╡╜ р┤др┤┐р┤░р┤Юр╡Нр┤Юр╡Жр┤Яр╡Бр┤др╡Нр┤др╡Н р┤ир┤┐р┤Щр╡Нр┤Щр┤│р╡Бр┤Яр╡Ж р┤▒р╡Жр┤╕р╡Нр┤пр╡Вр┤ор╡Ж р┤╕р╡Гр┤╖р╡Нр┤Яр┤┐р┤Хр╡Нр┤Хр┤╛р╡╗ р┤Жр┤░р┤Вр┤нр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х"}
              {selectedLanguage === "pa" && "риЖрикригри╛ рикрйЗри╕ри╝ри╛ риЪрйБригрйЛ риЕридрйЗ риЖрикригри╛ ри░ри┐риЬри╝ри┐риКриорйЗ римригри╛риЙригри╛ ри╕ри╝рйБри░рйВ риХри░рйЛ"}
              {selectedLanguage === "or" && "рмЖрмкрмгрмЩрнНрмХрм░ рммрнГрмдрнНрмдрм┐ рммрм╛рмирнНрмдрнБ рмПрммрмВ рмЖрмкрмгрмЩрнНрмХрм░ рм░рм┐рмЬрнНрнЯрнБрморнН рмдрм┐рмЖрм░рм┐ рмХрм░рм┐рммрм╛ рмЖрм░рморнНрмн рмХрм░рмирнНрмдрнБ"}
              {selectedLanguage === "as" && "ржЖржкрзЛржирж╛рз░ ржкрзЗржЫрж╛ ржмрж╛ржЫржирж┐ ржХрз░ржХ ржЖрз░рзБ ржЖржкрзЛржирж╛рз░ рз░рж┐ржЬрж┐ржЙржорзЗ рж╕рзГрж╖рзНржЯрж┐ ржХрз░рж╛ ржЖрз░ржорзНржн ржХрз░ржХ"}
              {selectedLanguage === "ur" && "╪з┘╛┘Ж╪з ┘╛█М╪┤█Б ┘Е┘Ж╪к╪о╪и ┌й╪▒█М┌║ ╪з┘И╪▒ ╪з┘╛┘Ж╪з ╪▒█М╪▓█М┘И┘Е█Т ╪и┘Ж╪з┘Ж╪з ╪┤╪▒┘И╪╣ ┌й╪▒█М┌║"}
              {(selectedLanguage === "en" || !selectedLanguage) &&
                "Select your profession and start creating your resume"}
            </p>
          </div>

          <div className="grid grid-cols-3 gap-8 max-w-4xl mx-auto">
            {professions.map((profession) => {
              const translation =
                profession.translations[selectedLanguage as keyof typeof profession.translations] ||
                profession.translations.en

              return (
                <Button
                  key={profession.id}
                  variant="outline"
                  className={`
                    h-36 flex flex-col items-center justify-center space-y-2 p-4
                    bg-white border-gray-300 text-gray-700 hover:bg-gray-50 
                    transition-all duration-300 hover:scale-105 shadow-sm
                    ${selectedProfession === profession.id ? "bg-blue-50 border-blue-400 text-blue-700" : ""}
                  `}
                  onClick={() => handleProfessionSelect(profession.id)}
                >
                  <div className="text-4xl mb-2">{profession.icon}</div>
                  <span className="text-sm font-semibold text-center leading-tight">{translation.name}</span>
                  <div className="text-xs text-gray-500 text-center">
                    {translation.subcategories.slice(0, 2).join(", ")}
                  </div>
                </Button>
              )
            })}
          </div>

          {isAudioPlaying && (
            <div className="mt-8 bg-blue-50 border border-blue-200 rounded-lg p-4 max-w-md mx-auto">
              <div className="flex items-center justify-center space-x-2">
                <Volume2 className="w-5 h-5 text-blue-600 animate-pulse" />
                <span className="text-blue-700">
                  {selectedLanguage === "hi" && "рдСрдбрд┐рдпреЛ рдЪрд▓ рд░рд╣рд╛ рд╣реИ..."}
                  {selectedLanguage === "bn" && "ржЕржбрж┐ржУ ржЪрж▓ржЫрзЗ..."}
                  {selectedLanguage === "te" && "р░Жр░бр░┐р░пр▒Л р░кр▒Нр░▓р▒З р░Ер░╡р▒Бр░др▒Лр░Вр░жр░┐..."}
                  {selectedLanguage === "ta" && "роЖроЯро┐ропрпЛ роЗропроЩрпНроХрпБроХро┐ро▒родрпБ..."}
                  {selectedLanguage === "mr" && "рдСрдбрд┐рдУ рдЪрд╛рд▓реВ рдЖрд╣реЗ..."}
                  {selectedLanguage === "gu" && "ркУркбрк┐ркпрлЛ ркЪрк╛рк▓рлА рк░рк╣рлНркпрлЛ ркЫрлЗ..."}
                  {selectedLanguage === "kn" && "р▓Жр▓бр▓┐р▓пр│Л р▓кр│Нр▓▓р│З р▓Жр▓Чр│Бр▓др│Нр▓др▓┐р▓жр│Ж..."}
                  {selectedLanguage === "ml" && "р┤Ур┤бр┤┐р┤пр╡Л р┤кр╡Нр┤▓р╡З р┤Ър╡Жр┤пр╡Нр┤пр╡Бр┤ир╡Нр┤ир╡Б..."}
                  {selectedLanguage === "pa" && "риЖрибрйАриУ риЪрй▒ри▓ ри░ри┐ри╣ри╛ ри╣рйИ..."}
                  {selectedLanguage === "or" && "рмЕрмбрм┐рмУ рмЪрм╛рм▓рнБрмЫрм┐..."}
                  {selectedLanguage === "as" && "ржЕржбрж┐ржЕ' ржЪрж▓рж┐ ржЖржЫрзЗ..."}
                  {selectedLanguage === "ur" && "╪в┌И█М┘И ┌Ж┘Д ╪▒█Б╪з █Б█Т..."}
                  {(selectedLanguage === "en" || !selectedLanguage) && "Audio playing..."}
                </span>
              </div>
            </div>
          )}
        </div>
      </main>

      <ModeSelectionModal
        isOpen={showModeModal}
        onClose={() => setShowModeModal(false)}
        onModeSelect={handleModeSelect}
        selectedLanguage={selectedLanguage}
      />
    </div>
  )
}

